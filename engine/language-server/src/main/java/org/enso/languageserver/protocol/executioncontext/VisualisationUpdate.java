// automatically generated by the FlatBuffers compiler, do not modify

package org.enso.languageserver.protocol.executioncontext;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class VisualisationUpdate extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static VisualisationUpdate getRootAsVisualisationUpdate(ByteBuffer _bb) { return getRootAsVisualisationUpdate(_bb, new VisualisationUpdate()); }
  public static VisualisationUpdate getRootAsVisualisationUpdate(ByteBuffer _bb, VisualisationUpdate obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public VisualisationUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public org.enso.languageserver.protocol.executioncontext.VisualisationContext visualisationContext() { return visualisationContext(new org.enso.languageserver.protocol.executioncontext.VisualisationContext()); }
  public org.enso.languageserver.protocol.executioncontext.VisualisationContext visualisationContext(org.enso.languageserver.protocol.executioncontext.VisualisationContext obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public int data(int j) { int o = __offset(6); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int dataLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector dataVector() { return dataVector(new ByteVector()); }
  public ByteVector dataVector(ByteVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer dataAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer dataInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createVisualisationUpdate(FlatBufferBuilder builder,
      int visualisationContextOffset,
      int dataOffset) {
    builder.startTable(2);
    VisualisationUpdate.addData(builder, dataOffset);
    VisualisationUpdate.addVisualisationContext(builder, visualisationContextOffset);
    return VisualisationUpdate.endVisualisationUpdate(builder);
  }

  public static void startVisualisationUpdate(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addVisualisationContext(FlatBufferBuilder builder, int visualisationContextOffset) { builder.addOffset(0, visualisationContextOffset, 0); }
  public static void addData(FlatBufferBuilder builder, int dataOffset) { builder.addOffset(1, dataOffset, 0); }
  public static int createDataVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createDataVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startDataVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endVisualisationUpdate(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 4);  // visualisationContext
    builder.required(o, 6);  // data
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public VisualisationUpdate get(int j) { return get(new VisualisationUpdate(), j); }
    public VisualisationUpdate get(VisualisationUpdate obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

